# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and make release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test_install_poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cookiecutter
      - name: Instantiate template and validate
        run: |
          mkdir instantiations
          cd instantiations

          cookiecutter --default-config --no-input ..
          cd python_boilerplate

          ./scripts/install_poetry.sh
          source $HOME/.poetry/env

          poetry --version


  test_install_pyenv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cookiecutter
      - name: Instantiate template and validate
        run: |
          mkdir instantiations
          cd instantiations

          cookiecutter --default-config --no-input ..
          cd python_boilerplate

          ./scripts/install_poetry.sh
          source $HOME/.bashrc

          poetry --version


  semantic_release:
    needs:
      - test_install_poetry
      - test_install_pyenv
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
#      - name: Install tools (Release tools)
#        run: make setup-release-tools-github
#      - name: Make release
#        run: make cicd-release
# alternative using a github action
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.0.4
          extra_plugins: |
            @semantic-release/changelog@"^5.0.1"
            @semantic-release/git@"^9.0.0"
            @semantic-release/github@"^7.0.5"
        env:
          GITHUB_TOKEN: ${{ secrets.SELF_SET_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
